// See https://aka.ms/new-console-template for more information


using System.Collections;
using System.Collections.Immutable;
using System.Diagnostics;
using System.Text;

namespace Day13
{
    class Program
    {

        private const string inputTest = @"..#.#..#####.#.#.#.###.##.....###.##.#..###.####..#####..#....#..#..##..###..######.###...####..#..#####..##..#.#####...##.#.#..#.##..#.#......#.###.######.###.####...#.##.##..#..#..#####.....#.#....###..#.##......#.....#..#..#..##..#...##.######.####.####.#.#...#.......#..#.#.#...####.##.#......#..#...##.#.##..#...##.#.##..###.#......#.#.......#.#.#.####.###.##...#.....####.#..#..#.##.#....##..#.####....##...##..#...#......#.#.......#.......##..####..#...#.#.#...##..#.#..###..#####........#..####......#..#

#..#.
#....
##..#
..#..
..###";


        private const string input =


#..#####.##.###.#.##..##..##.#..##.#.####..##.#....#...##.#.#.#.#..#..#.###..###...########.####.#..
#.####.#.####.####.#.....#..#...######.#...#..####..###....#....###..#..##.##....#..##.##.##....##.#
.##....#..##..##.####.##.#..#.......###...#.#..#.#...##...#....#..####..##.###.#..#.##..######...###
##.#..##.##...#..##.#####..#...###......#.#..##.##.#...#...#..#.#..##.#.#......#..##.#..#.##.##..###
##...##.##.#..#.#..#.#.#.#.#.....###..##...##...####.###.##.###....##.#......#..########.###...##.#.
##...#....#.#...#...#..#####..#..#.#####...#....#.##..####..###..#.###.#.##.....###.##..#..#.###.###
##.#.#...##.#.###.##...#.#.#.####.#..#..#.#.#.#####....#.##....##.#..#######.##.###.###...##.###.#..
.##.##..#.#####....##...#####.#####.#..#.#.##.#.#...#.#....#..#...##.....#.#.#.#####.######...#####.
#...#####.#.##..###.##....#....##..##.#...#..###.#.##.#..###.###.####..#.##.#..##.###.#...####...##.
..#.##.#..###.#.####....#.##.####.#.#.#....##.#.####...#..#...###.####.#.#......#.#####.#.###..#....
#####.#.#.#.#..##.....##.#......#....#.#..###..#.##...#.#.....##.....##..#....##...####.#....####.#.
####...##..#.#..#.#......#..##.####....#.##.#..#...####.####.#.###.#####..##...#.#.##.#...#.#...#.#.
#...#.#.#.##...##.##.#.###.#.#.###.#..##..##.##....###..#.##...##...#.#.##.....#..##.#.##...##..#.##
..###.######.#.....###....####...#.###..#....###..#..###..#.#.....#...#.##.#######.#.#.#####.#.#.##.
#.....#.####...#.##...###.##.####..#.....##.##.#..##.#..##..##...#..##.#######.#..#.#.#.........#..#
.#.##..##...#.#.###.##...#....#.##.#.#..##..#...#...#....####.#.####....#.##...#..#.###..#.#..#.####
####.##.###..#.#.....##........#.#...#.#####.#....#.#...#..###.#.#.##.##.#...#.#..##....#.#.######.#
#.#....#..#..#.##..#####.##.#...#..###.#####...##..#.##.#..###.#....#.#######..######..####...#.####
#..###.##...##.##....#.#.#..###.##.#....##.##.###....##..#.#..##.##...##..#..##..#.##...#....#..#.#.
#..###..####.#.#.#.##.#.#....#..#.##..#..###.#.#........#...#..####..##.###.#..#.##.#...#.#.##.###.#
##...#..##..#...#.#...##.....##.##..#...########.#..##########.#.#..#..#.####.###.#..####.##.####...
.##.....#.#..#.#.#.##....##..##.###.####.#.###..#.##..#.######.#....#.#..###.#..#..#.#.#.....#.#.#..
##.#.#..##.###....###....###.#.#..#.#.##..##.###.#....#.....###...#.#..###.####.###..#......#....##.
.#.....##..##.###.##.####.###..#.#.#...##.#.##.#..#..##.####..#.##.#...#.#....##..###..#######....#.
..###.#.#.#.#...#..##...##.#..###.###.....######.###...##...#.##..#..#....#...###...########...#.###
###..###.#.##...###.##.#..#...###..###.#..#####.#..#.#...##...#......#....#..##..#####.#...#.#####.#
.#.#####.#....#..##.##.##..#...#.###.##.######.#...###..#....##.#......#.#....##.#######...###.##.##
.###.#.###...##..#..#.##.####.#.....##.##.#....##..#.###.#...#.###.#...#..##.#..####..#...#.#.##...#
..##.##.##.##....###.##........##.###..#..#..#.#.#.#..#.#..#.###.###..#.###.#.#........#....#.##..##
#........####.##.#####.#...#.##..#..#..#.####.#.###....####.###.#...#...#.......###.#...####..#.####
.##.##..#.....#.###.#...##..###.#....####.#.##########..#..#.#...##.#.#..##.#.####..##....#..#..####
##.##....#.##....##.##.#..###..##.###....#.###.....#..#..##...##....##############..##.####..#.###.#
###..#..#..#.#.........#.#.##..###.##....#..##....####..####..#..#..#....#.####.#.###....##..##.#.##
###.#...######..####.##..#..#####.##.###.#.##..##.#####.#.##.###.#....##...#.#.#..#.........#.#.#.##
#..#.#.....#.####.##.#####.#####.#.#.##...#.###.##.#.##.....##....##..#.#..##..#...##.##.####..#.##.
#......##..#.#..#.###..#.#####..##.#.##...#....#.#.##.######...#......###.#.#...#.#.#.#.#..###...#..
.##.#.#...##.##...#.....#.#.#.#...##...##...##..##.#.##.##..#...#.##..#.#.####.#.#####.#...#....#.##
....#.###.#.#....#.###.#...#..##.#..#.##..#..#..#..###.....####.#.##...###....#####.#.##..##....##..
##.#####.#####.#.#...#####..#.#..#.....#...##.#..##.#.##.#..#.#.##.###..####.....#.#.....#....####..
.##....#.##.##...#.#..#.####....####....#.###.#.#..##...#.#.#...##..#..##.#.###.....#.#.#....#...#.#
...#..####.#...##..###.##.#.#...####.#..#..#.##.#.##...##...##..###..##.#.#...#.#.#.##.#.#..#..####.
#......#####....#..##.#.##...##.#####.##.#.###.#.#.......#.###.########.#.#.##...###.##.#.....##....
#.#..##..#.##.#.##.#####.#..####.#.###.###.#...#.##.#####.#..#.####.#....#...###...#####.#.#.######.
#.##..#.##.#.........#####.#.#.##...##..###...##.#.#..###.##..#.#.#.###..#.#.##...#.#.#...#.#..##.#.
...#.##.#.########.#.##.##.###.###...##....#.####.#.#.#.##.#..######.....##.........###....####.#.##
###.#####...#...#..#.#.###.##..#.###....#..#.#.##.#.#....#.##..##.#.#...######...####.#..##...#.##..
.#.##..##....##.###..#.##.#######.###.##.#.#.....###..#.#..####...#....##.##.#####.#...#####.##.#.##
#.####..#.##..###.#.##....####..#...#..#...#...####...##...#.#.#.#..#...##..##..#.#.......##...##.##
....####.#.######..###......##..#.#...######..#.#.#####.###..##..#...#####..#..#.#.###.##.....#.###.
#..#.#.##.##.####........#.##...#.#.#####.#..####....####..#.#.##.##...##.#..####..##.#...#####.#..#
.#....#...#.##.##.#..#.....##.#.#....#.#.##.....##.#..#.###..#..#.###.#......##...##..######.####..#
####...#.#.....#########...#.#..####.#.#...#..##..#...#.#.##.##..####.#..#..##...##.......#.#...##..
.#..##..#.#.....#..###..##..####.#..##.....##.#.#.#.#..####.#...#####.###...###...#....##.#.#####...
###..#..#.##.##.#..#####..#..####.######..##.######.#..##.#..##....#..#...#.##.#...##.##.####..###.#
..#..#.##....#######...#...##.##.#.#....##.##...###.##.###.#.#.#.#.#.###.#...#####..###...#..#.###..
###..#.#...##.##....#...#...#..##.#...####.......#.#..######...####.#..#..#..#.###.###........#..#..
.##.######.#.########..###..#######..#.###.###.#..#.##.###..##....#...#..#..#..##....##.##..#.#..#..
#.##....#.#.#..#.#....###..#...#.#..#..#####.#..##..#...#.##...#.###.####..###.....#.##...######....
...#...#.#.##.###..#.#...###.#...#...##..##.##....##.#.######....#.##.##..#...#..#.##.#...##..###...
#.#######..#.#..##.......#...###.##.##.#..##.#.####....#.#..#......###...####..#..#..#.#.#.#####..#.
..###..###.##.#.#..#.###..#.##.###....##.#..##.#....#####.#..##.####..#.......######.....#..######..
..##.##.#...#...######.#....#.########.#.#.........#....#####..###.##..#.##.#..#.##.#####.###....##.
#.#.####.#..#......###.....#.##.#.#.#...##...##.##.###...#.##.######..#.#.#..#.##..#####..#.....####
##.###..##...#.#....###.#...#####.##.####...#..#.#..#####...#..##..#...#.#.#.##.###.#..###....######
####..##...#..##.###..#.....##.########..#..#...#####.##.#.##.##....#...#...#.#.##....##..##.#.###.#
.#.#..##.###.#.#.#..#...###.#..#..#.....#......###.##...#..##...##..#..#######.##.##.#.#.####.#.#.##
##.#..###..#.#.###...#####..#...##...#..#.##...#.#.#.#.#.##.##.#.##..#..#.###...#..##..###.....####.
.##.#.##..###.#..##.#.#.###..#..####..#......#.###.##.#.....##....#..#.##.#....#.##.#.##..##.#.#.#.#
...##########.###.#...###....#.##.####.......##...#.##.#.###..#.##.#...#.##.#.#.##..#.#####.####..##
######..#.##.####..##..######....###.....#.##..##.#####..##.#..#..#...#.###..##.#....##...##..#..##.
.###.#..#.#.#.##..#####.###...##.#..#.#....#####.##.##.#.#..#..#...#####.......###........#.##.##...
#.#.#.##.#...#.######.#....#.#.#...####..#.....#..#.#.#.##..###.#.#..##.#####..##.#####.####....#.##
#....#....###..#...##.##.####..###..###.#####.##..####.##..##.#.#..###....#...#####.##..#..#.##.#...
###....###..........###.#.#.####..#####.##.......#.##.#.####...####...#.##.#...#....##.#####..##...#
...#.####....##.....#.###.#.#....#.####.#......#######..#.#..#.##.####...#.....##.##.#.#.#...#.#####
..####.#..#...##..##....##..##.#...##.##.##.##..###.###.#.#.##....####..##.##.##.####...###....##.#.
.######..##...##....##......#....#....#....########......#.#...###..#.###.#.#....####.##.#.###...#..
....#####..#..##.####.####...#....#.###......#.###.#...##..##..#.#.....##..#..##...#.###......#..##.
.#..#...####.##.#......###..#.#....##...#.###..##.##.#.#.####.....##..#.##.#.######..######..#...###
#....##.#.###.#.####.####.#..#...##.####.##....#.#..#.##...#.#..####......#.##..###..##.#.##...####.
.#..#.#.##....##....#..##..#.##.##.#..#..##..#....##....##...#..##.###..####.#######..#######..#.#.#
##.##.#.###....#.......##.###.#..#.#..#######.##.#...####..#..#.....#.#..##....###..#.#..##.#.##..##
.#..##.#...#.###..#...###...##..#...##..###.#.#....#.#.##...#...###.##.###.#....##.#.##.##.#.#.#.#..
.####.##........#..##.#.#...#...#.#....#####.#.##.#####.#....###...#.#..#...#####...##.#..####.####.
####.####...###.#..##.##.##.#..#...##..#.###.#.#...#.##.###..###.#..##.#########.#.#.#.......####..#
##..##.#......#....#.#.###.###.##.#......#...#.#......##..#.###.....#....#.##.#.....##.#.#.#.#.#.#.#
.#..##.##....##.....#.#.##.##..####..#.##.#####.#.#..#...#.###.#.#.####....##...##.###.######..#....
##.###...###..#...#.#...#.###.###....##.#.....#...##..#..#...##.#.#..#.######.#.....##...#.#....#.##
##.####.#.##..#...#.#.#.#.##..#..#.#.##.#..#.#...#.###.#.#.##...##..#.###....#.#..###.#.#.#######.#.
.#...###.....##......#.....##.#..#..##.##..#######.#..#...#####.#.#.....#.#..#.##..#.....##.###.##..
##..#.#.###...#.##...###.#.##......##.##.###..#....####.###.#.#..###...####.###..###.##.....#.#.####
.##.#.#..###.#.#..#....###.#.###..##.#..##.##.##..#.##.######.##.#.......#.##.##.##....#.....####...
..#.##.#..#.##.##....#.#...#.#######...###..##.######.##...#.###.#####..#.##.#.##...#..##.####......
#.#.#..#....#..##...##...#......#.#..#.##.#######......##...##..#....#..#...##.#.###..##.#..##.#..#.
..#.#....#....#.#...##...#.#.#.##.###...#..#..###...###.##..#.##..##..#.##.###.#.#.##...#####.#.###.
.#..###..#.#...##.#####..####.#.###..#####.####.##.#.....#...#..###.###.###..#..#...#..#.#..#####.##
...#.#########.##....#.#.#.####.#.###..#.#..#.#..#.#####.###.#....#.#....#.#.####.####.#..#......#..
##...#.###...#..#.#.##.#.#......#...#.#.....#.###.#.....#..#.##..######..#...##....#.#.#........###.
###.#.##.###..#....#####.#..#..##.#.###..#.#..##.###.#..##..###.#..##.###.##.#.....#.....#..#.....#.
.##.###..#..#.##..####....##..#.....#.#..########.###...#.##..#...######..#.#..#......#.###.#.####..
";




        static void exo1()
        {

            var strings = input.Split("\r\n", StringSplitOptions.RemoveEmptyEntries).Select(s => s.Trim())
                .ToArray();
            var enhan = strings[0];

            HashSet<(int i, int j)> img = new HashSet<(int i, int j)>();

            for (int i = 1; i < strings.Length; i++) {
                for (int j = 0; j < strings[i].Length; j++)
                {
                    if (strings[i][j] == '#')
                    {
                        img.Add((i, j));
                    }
                }
            }

            int minI = img.Select(kv => kv.i).Min() - 5;
            int minJ = img.Select(kv => kv.j).Min() - 5;
            int maxI = img.Select(kv => kv.i).Max() + 5;
            int maxJ = img.Select(kv => kv.j).Max() + 5;


            void SetNext(HashSet<(int i, int j)> inputImg, int i, int j, ref int val, bool secondPass)
            {
                val <<= 1;
                if (secondPass && (i < minI || i > maxI || j < minJ || j > maxJ))
                {
                    val |= 1;
                    return;
                }
                if (inputImg.Contains((i, j)))
                {
                    val |= 1;
                }
            }
            HashSet<(int i, int j)> Apply(HashSet<(int i, int j)> inputImg, bool secondPass) {
                var newImg =  new HashSet<(int i, int j)>();

                for (int i = minI; i <= maxI; i++)
                {
                    for (int j = minJ; j <= maxJ; j++)
                    {
                        int val = 0;
                        SetNext(inputImg, i - 1, j - 1, ref val,secondPass);
                        SetNext(inputImg, i - 1, j, ref val,secondPass);
                        SetNext(inputImg, i - 1, j + 1, ref val,secondPass);
                        SetNext(inputImg, i , j - 1, ref val,secondPass);
                        SetNext(inputImg, i , j, ref val,secondPass);
                        SetNext(inputImg, i , j + 1, ref val,secondPass);
                        SetNext(inputImg, i + 1, j - 1, ref val,secondPass);
                        SetNext(inputImg, i + 1, j, ref val,secondPass);
                        SetNext(inputImg, i + 1, j + 1, ref val,secondPass);
                        if (val >= enhan.Length)
                        {
                            throw new ArgumentOutOfRangeException();
                        }
                        if (enhan[val] == '#')
                        {
                            newImg.Add((i, j));
                        }
                    }
                }

                return newImg;
            }

            string Display(HashSet<(int i, int j)> inputImg)
            {
                var sb = new StringBuilder();

                for (int i = minI; i <= maxI; i++)
                {
                    for (int j = minJ; j <= maxJ; j++)
                    {
                        if (inputImg.Contains((i, j)))
                        {
                            sb.Append('#');
                        }
                        else
                        {
                            sb.Append('.');
                        }
                    }

                    sb.AppendLine();
                }

                return sb.ToString();
            }




            Console.WriteLine(Display(img));

            var after1 = Apply(img, false);

            Console.WriteLine(Display(after1));

            var after2 = Apply(after1, true);

            Console.WriteLine(Display(after2));
            Console.WriteLine(after2.Count);


        }


        static void exo2() {


            var strings = input.Split("\r\n", StringSplitOptions.RemoveEmptyEntries).Select(s => s.Trim())
                .ToArray();
            var enhan = strings[0];

            HashSet<(int i, int j)> img = new HashSet<(int i, int j)>();

            for (int i = 1; i < strings.Length; i++) {
                for (int j = 0; j < strings[i].Length; j++)
                {
                    if (strings[i][j] == '#')
                    {
                        img.Add((i, j));
                    }
                }
            }

            int minI = img.Select(kv => kv.i).Min() - 100;
            int minJ = img.Select(kv => kv.j).Min() - 100;
            int maxI = img.Select(kv => kv.i).Max() + 100;
            int maxJ = img.Select(kv => kv.j).Max() + 100;


            void SetNext(HashSet<(int i, int j)> inputImg, int i, int j, ref int val, bool secondPass)
            {
                val <<= 1;
                if (secondPass && (i < minI || i > maxI || j < minJ || j > maxJ))
                {
                    val |= 1;
                    return;
                }
                if (inputImg.Contains((i, j)))
                {
                    val |= 1;
                }
            }
            HashSet<(int i, int j)> Apply(HashSet<(int i, int j)> inputImg, bool secondPass) {
                var newImg =  new HashSet<(int i, int j)>();

                for (int i = minI; i <= maxI; i++)
                {
                    for (int j = minJ; j <= maxJ; j++)
                    {
                        int val = 0;
                        SetNext(inputImg, i - 1, j - 1, ref val,secondPass);
                        SetNext(inputImg, i - 1, j, ref val,secondPass);
                        SetNext(inputImg, i - 1, j + 1, ref val,secondPass);
                        SetNext(inputImg, i , j - 1, ref val,secondPass);
                        SetNext(inputImg, i , j, ref val,secondPass);
                        SetNext(inputImg, i , j + 1, ref val,secondPass);
                        SetNext(inputImg, i + 1, j - 1, ref val,secondPass);
                        SetNext(inputImg, i + 1, j, ref val,secondPass);
                        SetNext(inputImg, i + 1, j + 1, ref val,secondPass);
                        if (val >= enhan.Length)
                        {
                            throw new ArgumentOutOfRangeException();
                        }
                        if (enhan[val] == '#')
                        {
                            newImg.Add((i, j));
                        }
                    }
                }

                return newImg;
            }

            string Display(HashSet<(int i, int j)> inputImg)
            {
                var sb = new StringBuilder();

                for (int i = minI; i <= maxI; i++)
                {
                    for (int j = minJ; j <= maxJ; j++)
                    {
                        if (inputImg.Contains((i, j)))
                        {
                            sb.Append('#');
                        }
                        else
                        {
                            sb.Append('.');
                        }
                    }

                    sb.AppendLine();
                }

                return sb.ToString();
            }



            for (int step = 0; step < 50; step++)
            {
                img = Apply(img, step % 2 == 1);
            }
            Console.WriteLine(img.Count);

            /*Console.WriteLine(Display(img));

            var after1 = Apply(img, false);

            Console.WriteLine(Display(after1));

            var after2 = Apply(after1, true);

            Console.WriteLine(Display(after2));
            Console.WriteLine(after2.Count);*/


            }

            static void Main(string[] args)
            {
                Console.WriteLine("Hello World!");
                exo2();
            }
    }
}